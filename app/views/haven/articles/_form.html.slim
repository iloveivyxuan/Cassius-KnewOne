.spinner-fullscreen
  em 正在加载
= form_for [:haven, @article], html: {class: "editor", id: "form-article"} do |f|
  .editor-menu
    p.editor-target
      | 写文章－精选
    output
    .pull-right
      button.editor-help-toggle type="button" data-toggle="modal" data-target="#editor-help"
        i.fa.fa-question
        | 帮助
      button.editor-close type="button" 退出
      button.editor-drop type="button" 舍弃
      button.editor-save type="button" 保存
      button.editor-submit type="submit" 发布
  article.editor-content.article data-article-id=@article.id
    header
      = f.text_field :title, class: "title", required: true, autocomplete: "off", autofocus: "true", placeholder: "标题"
      .editor-metas
        .form-group
          label 作者：
          = hidden_field_tag 'article[author]', @article.author.id.to_s, id: 'author_id'
          input#author_autocomplete.form-control placeholder="用户昵称" value="#{@article.author.name}"
    .body#form-article-body
      p
        br
    = render 'shared/editor_ctxmenu'
    = f.hidden_field :content, value: load_post_resources(@article)
= attachment_tag target: "#pictureBtn", edit: "insertImage"
= render 'shared/editor_help'
= render 'things/thing_embed_form_modal'

- content_for :script do
  javascript:
    new Making.Views.Editor({
      el: '#form-article',
      model: new Making.Models.Editor(),
      mode: 'standalone',
      type: 'article',
      buttons: ['header1', 'header2', 'anchor', 'bold', 'italic', 'strikethrough', 'orderedlist', 'unorderedlist', 'quote'],
      excludeField: '[name="utf8"], [name="authenticity_token"]',
      placeholder: '正文',
      imageSize: 'huge'
    });
    Making.embedThing('#form-article')
    Making.UserFuzzy('#author_autocomplete', '[name="article[author]"]');
