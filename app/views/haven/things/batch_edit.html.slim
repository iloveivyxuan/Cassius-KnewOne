hgroup
  h1
    | 批量修改产品
  p= "当前数量 #{@things.size} / 总数量 #{Thing.all.size}"

- queries = params.except(*request.path_parameters.keys)
- queries[:filter] ||= []

ul.nav.nav-pills
  - if queries[:filter].any?
    li
      = link_to '全部', queries.reject! {|k, v| k == :filter}
  - else
    li.active
      = link_to '全部', queries.reject! {|k, v| k == :filter}

  - haven_filters.each do |k, v|
     - conds = queries.deep_dup
     - if conds[:filter].include?(k)
       li.active
         - conds[:filter].reject! {|f| f == k}
         = link_to v, batch_edit_haven_things_path(conds)
     - else
       li
         - conds[:filter].push(k)
         = link_to v, batch_edit_haven_things_path(conds)

- haven_queries.each do |query, tag_text|
  = form_tag batch_edit_haven_things_path, method: :get do
    - haven_filters.each do |k, _|
      - if queries["filter"].include?(k)
        = hidden_field_tag "filter[]", k
    - haven_queries.each do |k, v|
      - if queries.include?(k)
        = hidden_field_tag k, queries[k]
    = text_field_tag(query, params[query])
    = submit_tag "查询#{tag_text}"

- @things.each do |t|
  = form_tag batch_update_haven_things_path(redirect_from: request.fullpath), method: :patch, remote: true, class: "batch_edit" do
    table.table.table-striped.table-bordered
      tr
        th style="width:40%" 标题
        th 购买
        th style="width:15%" 分类
        th style="width:10%"
        tr
          td
            = hidden_field_tag 'things[][id]', t.id.to_s
            | 标题
            = text_field_tag 'things[][title]', t.title, style: 'width: 100%'
            br
            | 副标题
            = text_field_tag 'things[][subtitle]', t.subtitle, style: 'width: 100%'
            br
            | 价格单位
            .btn-group
              - Thing::CURRENCY_LIST.each do |u|
                label.btn.btn-default
                  input checked=(t.price_unit == u) name='things[][price_unit]' type="radio" value=u
                    | #{u}
            br
            | 价格
            = text_field_tag 'things[][price]', t.price, style: 'width: 100%'
            br
            | 优先级
            = text_field_tag 'things[][priority]', t.priority, style: 'width: 100%'
          td
            | 阶段
            .btn-group
              - Thing::STAGES.invert.each do |k, v|
                label class=(t.stage == v ? "btn btn-default active" : "btn btn-default")
                  input checked=(t.stage == v) name='things[][stage]' type="radio" value=v
                    | #{k}
            | 购买链接
            = text_field_tag 'things[][shop]', t.shop, style: 'width: 100%'
            | 分享文案
            = text_field_tag 'things[][sharing_text]', t.sharing_text, style: 'width: 100%'
            | 来源网站
            = text_field_tag 'things[][official_site]', t.official_site, style: 'width: 100%'
            | 分享者&nbsp;
            = link_to t.author.name, user_path(t.author), target: '_blank'
          td
            | 标签
            = text_field_tag 'things[][tags_text]', t.tags_text, hint: "用,分隔", style: 'width: 100%'
            | 品牌
            = text_field_tag 'things[][brand_text]', t.brand.try(:brand_text), style: 'width: 100%'
          td
            = link_to t, target: '_blank' do
              = image_tag(t.cover.url(:small))
      tfoot
        tr
          td colspan=4
            output.pull-left
            = submit_tag '修改', class: 'btn btn-primary pull-right'

= paginate @things

- content_for :script do
  javascript:
    $(document).ready(function() {
      $(".batch_edit")
        .on("ajax:error", function(e, data, status, xhr) {
          var output = this.getElementsByTagName("output")[0];
          output.innerText = data.responseText;
          output.classList.add("text-danger");
        })
      });
