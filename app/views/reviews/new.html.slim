- provide :nav, :reviews

= simple_form_for [@thing, @review], html: {class: "edit_post"} do |f|
  .help-block 欢迎您在这里写下对于产品本身的使用体验，给其他对产品感兴趣的朋友们提供客观可信的参考，谢谢：）
  = f.input :title, label: false, placeholder: "标题"
  = f.input :content, as: :hidden
  = f.input :score, as: :range, label: false, input_html: {class:'range_rating', max: 5, min: 0}
  - if current_user.role? :editor
    = f.input :is_top, as: :boolean
    - if @review.persisted?
      .form-group
        label.control-label 作者
        = hidden_field_tag 'review[author]', @review.author.id.to_s, id: 'author_id'
        input#author_autocomplete.form-control placeholder="用户昵称" value="#{@review.author.name}"

= render 'shared/editor'

.post_submit
  = button_tag "提交评测", class: "btn btn-lg btn-primary "
  = provider_sync if @review.new_record?

- content_for :script do
  javascript:
    Making.Editor('#review_content', '#wrapper #editor', true);
    Making.FormLink("form.edit_post", ".post_submit button");
    Making.UserFuzzy('#author_autocomplete', '#author_id');
    Making.Rating();
